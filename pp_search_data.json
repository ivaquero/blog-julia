[{"url":".","title":"index","tags":["homepage"],"text":""},{"url":"search/","title":"Search results","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"analysis/base_01_plutoui/","title":"Pluto UI","tags":["analysis","track_data","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 1 section 0 order 0 title \"Pluto UI\" tags \"analysis\", \"track data\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using PlutoUI using PlutoUI Slider, Button using CairoMakie md\" PlutoUI Cheatsheet\" TableOfContents md\" Intro to PlutoUI\" md\"General tools \" TableOfContents md\" with terminal \" with terminal do println \"Hello, World \" end md\" Interactive PlutoUI Widgets\" md\" Single Slider\" md\"Fahrenheit to Celsius equation \" md\" °C \\frac 5 9 × °F 32 \" bind sliderF Slider 50.0 90.0, 72.0, true sliderC round 5 9 sliderF 32 , digits 1 md\"Temperature sliderF °F | sliderC °C\" md\" Scrubbable\" md\"Thermostat bind scrubF Scrubbable 50.0 90.0, default 72.0 °F\" scrubC round 5 9 scrubF 32 , digits 1 md\"Temperature scrubF °F | scrubC °C\" md\" NumberField\" bind numberF NumberField 50.0 90.0, default 72.0 numberC round 5 9 numberF 32 , digits 1 md\"Temperature numberF °F | numberC °C\" md\" CheckBox\" md\"Check the box to see the temperature in Celsius bind checkC CheckBox \" if checkC md\"Temperature numberC °C\" else md\"Temperature numberF °F\" end md\" TextField\" bind textF TextField default \"72\" parseF parse Float64, textF textC round 5 9 parseF 32 , digits 1 md\"Temperature parseF °F | textC °C\" md\" Select\" bind selectScale Select \"Fahrenheit\", \"Celsius\" if selectScale \"Celsius\" md\"Temperature numberC °C\" else md\"Temperature numberF °F\" end md\" MultiSelect\" bind multiScales MultiSelect \"Fahrenheit\", \"Celsius\" if multiScales \"Fahrenheit\", \"Celsius\" md\"Temperature numberF °F | numberC °C\" elseif multiScales \"Fahrenheit\" md\"Temperature numberF °F\" elseif multiScales \"Celsius\" md\"Temperature numberC °C\" else md\"Please make selection s .\" end md\" MultiCheckBox\" bind boxScales MultiCheckBox \"Fahrenheit\", \"Celsius\" if boxScales \"Fahrenheit\", \"Celsius\" md\"Temperature numberF °F | numberC °C\" elseif boxScales \"Fahrenheit\" md\"Temperature numberF °F\" elseif boxScales \"Celsius\" md\"Temperature numberC °C\" else md\"Please make selection s .\" end md\" Button\" bind random Button \"Random Data Generator\" typeof random md\" Interactive Plot\" md\"Equation of a straight line \" md\" y mx b \" md\"where m is the rise over run slope and b is the y intercept.\" begin slope bind m Slider 10.0 0.1 10.0, 1.0, true intercept bind b Slider 10.0 0.1 10.0, 0.0, true md\"Parameters \\ Slope slope \\ y intercept intercept \" end x range 10, 10 scatter x, markersize 3 f x m . x . b lines f x , linewidth 3 "},{"url":"analysis/data_01_man/","title":"Data Manipulation","tags":["analysis","track_data","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 1 section 1 order 1 title \"Data Manipulation\" tags \"analysis\", \"track data\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using TidierFiles, TidierData using RDatasets using PlutoUI md\" Data Manipulation\" TableOfContents md\" Glimpse\" movies dataset \"ggplot2\", \"movies\" glimpse movies "},{"url":"analysis/plots_01_corr/","title":"Plot Correlation","tags":["analysis","track_data","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.47 frontmatter chapter 1 section 2 order 1 title \"Plot Correlation\" tags \"analysis\", \"track data\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils begin using Pkg Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate end using TidierFiles, TidierData, TidierPlots using WGLMakie md\" Plot Correlation\" WGLMakie.activate function Base.show io IO, MIME\"text html\", x TidierPlots.GGPlotGrid show io, MIME\"text html\" , with theme x.plots 1 .theme do draw ggplot x end end md\" Regression Plot\" ads read csv \".. data advertising.csv\" p1 ggplot ads, aes x TV, y sales geom point color red geom smooth method lm, linewidth 3, alpha 0.5 p2 ggplot ads, aes x radio, y sales geom point color red geom smooth method lm, linewidth 3, alpha 0.5 p3 ggplot ads, aes x newspaper, y sales geom point color red geom smooth method lm, linewidth 3, alpha 0.5 p13 p1 p2 p3 p13 "},{"url":"assets/scripts/get_highlights/","title":"get_highlights","tags":[],"text":"if isempty get metadata \"homepage\" , \"highlights\", nothing else highlights htl \"\"\" section div class \"content\" h2 x \"name\" h2 p x \"text\" p div div class \"preview\" img src \" x \"img\" \" div section \"\"\" for x in metadata \"homepage\" \"highlights\" htl \"\"\" div class \"subjectscontainer wide\" h1 Highlights h1 div class \"contain\" highlights div div \"\"\" end"},{"url":"assets/scripts/get_subjects/","title":"get_subjects","tags":[],"text":"let sections metadata \"sidebar\" sections htl \"\"\" let input other page.input output other page.output name get output.frontmatter, \"title\", basename input.relative path desc get output.frontmatter, \"description\", nothing tags get output.frontmatter, \"tags\", String image get output.frontmatter, \"image\", nothing class \"no decoration\", \"tag replace x, \" \" \" \" \" for x in tags ..., image nothing || isempty image ? nothing htl \"\"\" a title desc class class href root url \" \" other page.url h3 name h3 img src image a \"\"\" end for other page in collections section id .pages \"\"\" for section id, section name in sections isempty sections ? nothing htl \"\"\" div class \"wide subjectscontainer\" h1 Subjects h1 div class \"subjects\" sections div div \"\"\" end"},{"url":"filters/bayes/","title":"bayes","tags":[],"text":"module bayes export normalize, update, predict \"\"\" normalize pdf Returns normalized discrete probability distribution function Examples ```julia repl julia belief 0.3 0.1 0.1 0.1 0.0 0.1 0.4 0.4 0.1 0.0 julia normalize belief 1×10 Array Float64,2 0.1875 0.0625 0.0625 0.0625 0.0 0.0625 0.25 0.25 0.0625 0.0 ``` \"\"\" function normalize pdf AbstractArray pdf sum pdf return pdf end \"\"\" update likelihood, prior Computes the posterior of a discrete random variable given a discrete likelihood and prior Examples ```julia repl julia belief 0.3 0.1 0.1 0.1 0.0 0.1 0.4 0.4 0.1 0.0 julia likelihood 1. 0. 1. 0.3 0.3 0.1 0.001 0.9 0.1 0.9 julia update likelihood, belief 1×10 Array Float64,2 0.370188 0.0 0.123396 0.0370188 0.0 0.0123396 0.000493583 0.444225 0.0123396 0.0 ``` \"\"\" function update likelihood AbstractArray, prior AbstractArray posterior prior . likelihood return normalize posterior end \"\"\" predict pdf, offset, kernel Performs the discrete Bayes filter prediction step, generating the prior. `pdf` is a discrete probability distribution expressing our initial belief. `offset` is an integer specifying how much we want to move to the right negative values means move to the left Noise in that offset is expressed in `kernel`. Examples ```julia repl julia belief .05 .05 .05 .05 .55 .05 .05 .05 .05 .05 julia kernel .1 .8 .1 julia prior predict belief, 1, kernel 10 element Array Float64,1 0.05 0.05 0.05 0.05 0.1 0.45 0.1 0.05 0.05 0.05 ``` \"\"\" function predict pdf AbstractArray, offset Int, kernel AbstractArray n length pdf m length kernel width Int m 1 2 prior zeros n for i in 1 n for j in 1 m index i width j offset n % n prior i pdf index 1 . kernel j end end return prior end end "},{"url":"filters/ghk/","title":"ghk","tags":[],"text":"module ghfilter export GHFilter, GHKFilter, update, batch filter FloatOrNothing Union Real,Nothing FloatOrArray Union Real,AbstractArray \"\"\" GHFilter x, dx, dt, g, h Define and initialize a g h filter Examples ```julia repl julia ghf GHFilter 0.0, 0.0, 1.0, 0.8, 0.2 GHFilter 0.0, 0.0, 1.0, 0.8, 0.2 ``` \"\"\" mutable struct GHFilter x FloatOrArray dx FloatOrArray dt Real g Real h Real end \"\"\" update filter GHFilter, z Union Real, AbstractArray Real , g Union Real, Nothing nothing, h Union Real, Nothing nothing performs the g h filter predict and update step on the measurement z and returns the state of x and dx as a tuple. Optional Overrides filter.g and filter.h for this update. Examples ```julia repl julia ghf GHFilter 0.0, 0.0, 1.0, 0.8, 0.2 julia update ghf, 1.2 0.96, 0.24 julia update ghf, 2.1, g 0.85, h 0.15 1.965, 0.375 ``` \"\"\" function update filter GHFilter, z FloatOrArray g FloatOrNothing nothing, h FloatOrNothing nothing if g nothing g filter.g end if h nothing h filter.h end prediction step dx prediction filter.dx x prediction filter.x . filter.dx filter.dt update step y z . x prediction filter.dx dx prediction . h y filter.dt filter.x x prediction . g y return filter.x, filter.dx end \"\"\" batch filter filter GHFilter, data AbstractArray, save predictions Bool false Given a sequenced list of data, performs g h filter with a fixed g and h. Examples ```julia repl julia ghf GHFilter 0.0, 0.0, 1.0, 0.8, 0.2 GHFilter 0.0, 0.0, 1.0, 0.8, 0.2 julia batch filter ghf, 1.0, 2.0, 3.0 0.0 0.8 1.8 2.84 , 0.0 0.2 0.4 0.56 julia ghf GHFilter 1., 0. , 2., 3. , 1., 0.1, 0.02 julia batch filter ghf, 1.0 0.2 2.0 3.0 3.0 1.0 1.0 0.0 2.8 2.72 4.484 5.3976 6.04992 7.559488 , 2.0 3.0 1.96 2.944 1.9048 2.89072 1.837024 2.7449536 ``` \"\"\" function batch filter filter GHFilter, data AbstractArray save predictions Bool false if length filter.x 1 x filter.x dx filter.dx else x filter.x dx filter.dx end dim length x n size data 1 x results zeros n 1, dim dx results zeros n 1, dim x results 1, x dx results 1, dx if save predictions predictions zeros n, dim end h dt filter.h filter.dt for i, z in enumerate eachrow data prediction x est x . dx filter.dt update residual z . x est dx dx . h dt residual x x est . filter.g residual x results i 1, x dx results i 1, dx if save predictions predictions i, x est end end if save predictions return x results, dx results, predictions end return x results, dx results end \"\"\" GHKFilter x, dx, ddx, dt, g, h, k Define and initialize a g h k filter Examples ```julia repl julia x0 1.0, 10.0, 100.0 julia dx0 10.0, 12.0, 0.2 julia ddx0 0.1, 0.2, 0.0 julia filter GHKFilter x0, dx0, ddx0, 1.0, 0.8, 0.2, 0.1 GHKFilter 1.0, 10.0, 100.0 , 10.0, 12.0, 0.2 , 0.1, 0.2, 0.0 , 1.0, 0.8, 0.2, 0.1 ``` \"\"\" mutable struct GHKFilter x FloatOrArray dx FloatOrArray ddx FloatOrArray dt Real g Real h Real k Real end \"\"\" update filter GHKFilter, z Union Real, AbstractArray , g Union Real, Nothing nothing, h Union Real, Nothing nothing, k Union Real, Nothing nothing, performs the g h k filter predict and update step on the measurement z and returns the state of x and dx as a tuple. Optional Overrides filter.g, filter.h and filter.k for this update. Examples ```julia repl julia filter GHKFilter x0, dx0, ddx0, 1.0, 0.8, 0.2, 0.1 GHKFilter 1.0, 10.0, 100.0 , 10.0, 12.0, 0.2 , 0.1, 0.2, 0.0 , 1.0, 0.8, 0.2, 0.1 julia update filter, 12.0, 11.3, 105.9 11.81, 13.46, 104.76 , 10.29, 10.04, 1.34 ``` \"\"\" function update filter GHKFilter, z FloatOrArray g FloatOrNothing nothing, h FloatOrNothing nothing, k FloatOrNothing nothing if g nothing g filter.g end if h nothing h filter.h end if k nothing k filter.k end dt filter.dt dt sqr dt^2 prediction ddx prediction filter.ddx dx prediction filter.dx . filter.ddx dt x prediction filter.x . filter.dx dt . 0.5 filter.ddx dt sqr update y z . x prediction filter.ddx ddx prediction 2 k y dt sqr filter.dx dx prediction h y dt filter.x x prediction g y return filter.x, filter.dx end \"\"\" batch filter filter GHKFilter, data AbstractArray, save predictions Bool false Given a sequenced list of data, performs g h k filter with fixed g, h and k. Examples ```julia repl julia filter GHKFilter x0, dx0, ddx0, 1.0, 0.8, 0.2, 0.1 julia z 12.0 11.3 105.9 14.0 15.3 111.9 julia batch filter filter, z 1.0 10.0 100.0 11.81 13.46 104.76 15.649 16.744 110.854 , 10.0 12.0 0.2 10.29 10.04 1.34 8.931 6.636 3.526 , 0.1 0.2 0.0 0.29 1.96 1.14 1.359 3.404 2.186 ``` \"\"\" function batch filter filter GHKFilter, data AbstractArray save predictions Bool false if length filter.x 1 x filter.x dx filter.dx ddx filter.ddx else x filter.x dx filter.dx ddx filter.ddx end dim length x n size data 1 x results zeros n 1, dim dx results zeros n 1, dim ddx results zeros n 1, dim x results 1, x dx results 1, dx ddx results 1, ddx if save predictions predictions zeros n, dim end dt filter.dt dt sqr dt^2 h dt filter.h filter.dt k dt sqr 2 filter.k dt^2 for i, z in enumerate eachrow data prediction dx est dx . ddx dt x est x . dx filter.dt . 0.5 ddx dt sqr update y z . x est ddx ddx . k dt sqr y dx dx est . h dt y x x est . filter.g y x results i 1, x dx results i 1, dx ddx results i 1, ddx if save predictions predictions i, x est end end if save predictions return x results, dx results, ddx results, predictions end return x results, dx results, ddx results end end "},{"url":"filters/kalman/","title":"kalman","tags":[],"text":"module kalman implements the linear kalman filter algorithm export KalmanFilter, predict, update, residual of, measurement of state, batch filter, rts smoother using LinearAlgebra \"\"\" KalmanFilter x dim, z dim keyword arguments Defines a Kalman Filter of specified dimensions. Use matrices instead of vectors for inputs. ... Arguments `x dim Int` number of dimensions of x `z dim Int` number of dimensions of z `u dim Int 0` number of dimensions of u `x AbstractArray zeros x dim,1 ` state `P AbstractArray Matrix Real I, x dim, x dim ` uncertainty covariance `Q AbstractArray Matrix Real I, x dim, x dim ` process uncertainty `B AbstractArray zeros x dim, u dim ` control transition matrix `u AbstractArray zeros u dim,1 ` control vector `F AbstractArray Matrix Real I, x dim, x dim ` state transition matrix `H AbstractArray zeros z dim, x dim ` measurement function `R AbstractArray Matrix Real I, z dim, z dim ` state uncertainty `z AbstractArray Matrix Real undef, z dim, 1 ` measurement `K AbstractArray zeros x dim, z dim ` Kalman gain `y AbstractArray zeros z dim, 1 ` residual `S AbstractArray zeros z dim, z dim ` system uncertainty `SI AbstractArray zeros z dim, z dim ` inverse system uncertainty `x prior AbstractArray copy x ` prior `P prior AbstractArray copy P ` prior covariance `x post AbstractArray copy x ` posterior `P post AbstractArray copy P ` posterior covariance ... Examples ```julia repl julia kf KalmanFilter x dim 2, z dim 1, x 10., 4.5 , P 500. 0. 0. 500. julia predict kf, F 1 0.3 0 1 , Q 0 julia println kf.x, kf.P \\\\ 11.35, 4.5 545.0 150.0 150.0 500.0 julia predict kf, F 1 0.3 0 1 , Q 0.588 1.175 1.175 2.35 julia println kf.x, kf.P \\\\ 12.7, 4.5 680.588 301.175 301.175 502.35 julia update kf, 1. , R 5., H 1 0 julia println kf.x, kf.P \\\\ 1.0853282146128578, 0.6397450072054944 4.963534951020146 2.1964722253014934 2.1964722253014934 370.04549550896456 \"\"\" Base. kwdef mutable struct KalmanFilter x dim Int z dim Int u dim Int 0 x AbstractArray zeros x dim, 1 state P AbstractArray Matrix Real I, x dim, x dim uncertainty covariance Q AbstractArray Matrix Real I, x dim, x dim process uncertainty B AbstractArray zeros x dim, u dim control transition matrix u AbstractArray zeros u dim, 1 control vector F AbstractArray Matrix Real I, x dim, x dim state transition matrix H AbstractArray zeros z dim, x dim measurement function R AbstractArray Matrix Real I, z dim, z dim state uncertainty M AbstractArray zeros x dim, z dim process measurement cross correlation z AbstractArray Matrix Real undef, z dim, 1 measurement K AbstractArray zeros x dim, z dim Kalman gain y AbstractArray zeros z dim, 1 residual S AbstractArray zeros z dim, z dim system uncertainty SI AbstractArray zeros z dim, z dim inverse system uncertainty x prior AbstractArray copy x P prior AbstractArray copy P x post AbstractArray copy x P post AbstractArray copy P end \"\"\" predict filter keyword arguments Predict next state prior using the Kalman filter state propagation equations Arguments `filter KalmanFilter` the filter `u filter.u` control vector `Q filter.Q` process uncertainty `B filter.B` control transition matrix `F filter.F` state transition matrix `modify Bool true` whether to modify the filter or return x, P \"\"\" function predict filter KalmanFilter u filter.u, B filter.B, F filter.F, Q filter.Q, modify Bool true if length Q 1 Q I Q end if filter.u dim 0 propagate state x Fx Bu x F filter.x B u else x F filter.x end propagate covariance P FPF' Q P F filter.P F' Q if modify update state filter.x copy x filter.P copy P update state prior filter.x prior copy x filter.P prior copy P return else return x, P end end \"\"\" update filter, z keyword arguments Update `filter` with new measurement `z`. Arguments `filter KalmanFilter` object of type `KalmanFilter` `z AbstractArray` measurement `H filter.H` measurement function `R filter.R` state uncertainty `modify Bool true` whether to modify the filter or return x, P \"\"\" function update filter KalmanFilter, z AbstractArray R filter.R, H filter.H, modify Bool true if length R 1 R I R end compute residual y z Hx y z H filter.x compute system uncertainty PHT filter.P H' S H PHT R SI inv S compute Kalman gain K PH'inv S K PHT SI compute state x x Ky x filter.x K y compute state cov P I KH P I KH ' KRK' I KH I K H P I KH filter.P I KH' K R K' if modify update variables filter.x copy x filter.P copy P filter.y copy y filter.K copy K filter.S copy S filter.SI copy SI save measurement and posterior state filter.z copy z filter.x post copy x filter.P post copy P return else return x, P end end \"\"\" residual filter, z Returns the residual for the given measurement `z` without altering the state of the filter \"\"\" function residual of filter KalmanFilter, z return z filter.H filter.x prior end \"\"\" measurement of state filter, x Converts state `x` into measurement does not alter the state of the filter \"\"\" function measurement of state filter KalmanFilter, x return self.H x end \"\"\" batch filter filter, zs Updates `filter` with a sequence of measurements `zs`. Returns means and covariances after update at each time step. zs \"\"\" function batch filter filter KalmanFilter, zs us nothing, Fs nothing, Qs nothing, Hs nothing, Rs nothing, Bs nothing n size zs 1 if us nothing us fill filter.u, n end if Fs nothing Fs fill filter.F, n end if Qs nothing Qs fill filter.Q, n end if Hs nothing Hs fill filter.H, n end if Rs nothing Rs fill filter.R, n end if Bs nothing Bs fill filter.B, n end means zeros n, filter.x dim covariances fill zeros filter.x dim, filter.x dim , n for i, z in enumerate eachrow zs predict filter, u us i , B Bs i , F Fs i , Q Qs i update filter, z, R Rs i , H Hs i means i, filter.x covariances i filter.P end return means, covariances end \"\"\" rts smoother filter, Xs, Ps, Fs, Qs Runs the Rauch Tung Striebel Kalman smoother on a set of means and covariances computed by a Kalman filter preferably using batch filter . Returns smoothed means `x`, smoothed state covariances `P` and smoother gain `K` at each step. \"\"\" function rts smoother filter KalmanFilter, Xs AbstractArray, Ps AbstractArray Fs nothing, Qs nothing size Xs 1 size Ps 1 || throw DimensionMismatch \"length of Xs and Ps must be the same\" n size Xs 1 if Fs nothing Fs fill filter.F, n end if Qs nothing Qs fill filter.Q, n end smoother gain K fill zeros filter.x dim, filter.x dim , n x, P, Pp copy Xs , copy Ps , copy Ps for i in n 1 1 1 Pp i Fs i 1 P i Fs i 1 ' Qs i 1 K i P i Fs i 1 ' inv Pp i x i, K i x i 1, Fs i 1 x i, P i K i P i 1 Pp i K i ' end return x, P, K end \"\"\" Example kf KalmanFilter x dim 2, z dim 1, R 3. , , Q 0.02 0 0 0.02 , P 500. 0. 0. 49. , x 0. 0. ', F 1. 1. 0. 1. , H 1 0 simulate measurements using Random process var 0.02 sensor var 3. dt 1. num 50 xi 0.0 vi 1.0 process std sqrt process var sensor std sqrt sensor var rng MersenneTwister 42 xs zeros num,1 track zs zeros num,1 measurements for i in 1 num move v vi randn rng process std xi v dt xs i xi sense zs i, xi randn rng sensor std end Xs, Covs batch filter kf, zs Ms, Ps, Ks rts smoother kf, Xs, Covs using Plots plotlyjs scatter zs ,1 , label \"measured\" plot collect 1 50 ,label \"track\" plot Xs ,1 , label \"filter\" plot Ms ,1 , label \"smoother\" \"\"\" end "},{"url":"filters/kalman_ukf/","title":"kalman_ukf","tags":[],"text":"module kalman ukf implements the unscented kalman filter and related functions include \"noise.jl\" using .common include \"sigma points.jl\" using .sigma points export UnscentedKF, predict, update, batch filter, rts smoother export unscented transform, compute process sigmas, cross variance export MerweScaledSigmaPoints, JulierSigmaPoints, sigma points using LinearAlgebra using StatsBase mean, weights \"\"\" unscented transform sigmas, Wm, Wc, noise cov nothing, mean fn nothing Computes unscented transform of a set of sigma points and weights and returns the mean and covariance. \"\"\" function unscented transform sigmas, Wm, Wc noise cov nothing, mean fn Function mean, residual fn Function kmax, n size sigmas x mean fn sigmas, weights Wm , dims 1 if residual fn y sigmas . x P y' Diagonal Wc y else P zeros n, n for k in 1 kmax y residual fn. sigmas k, , x P Wc k y y' end end if noise cov nothing P noise cov end return x , P end Base. kwdef mutable struct UnscentedKF x dim Int z dim Int dt Real fx Function hx Function points fn Union MerweScaledSigmaPoints,JulierSigmaPoints sqrt fn Function cholesky x mean fn Function mean z mean fn Function mean residual x Function residual z Function state add Function x AbstractArray zeros x dim, 1 P AbstractArray Matrix Real I, x dim, x dim Q AbstractArray Matrix Real I, x dim, x dim R AbstractArray Matrix Real I, z dim, z dim num sigmas Real points fn.num sigmas Wm AbstractArray points fn.Wm Wc AbstractArray points fn.Wc sigmas f AbstractArray zeros num sigmas, x dim sigmas h AbstractArray zeros num sigmas, z dim K AbstractArray zeros x dim, z dim y AbstractArray zeros z dim, 1 z AbstractArray Matrix undef, z dim, 1 S AbstractArray zeros z dim, z dim SI AbstractArray zeros z dim, z dim x prior AbstractArray copy x P prior AbstractArray copy P x post AbstractArray copy x P post AbstractArray copy P end function compute process sigmas filter UnscentedKF, dt fx filter.fx, fx args... sigmas sigma points filter.points fn, filter.x, filter.P for i, s in enumerate eachrow sigmas filter.sigmas f i, fx s, dt fx args... end end function cross variance filter, x, z, sigmas f, sigmas h Pxz zeros size sigmas f 2 , size sigmas h 2 N size sigmas f 1 for i in 1 N dx filter.residual x sigmas f i, , x dz filter.residual z sigmas h i, , z Pxz filter.Wc i dx dz' end return Pxz end function predict filter UnscentedKF UT Function unscented transform, dt Real filter.dt, fx Function filter.fx, fx args... compute process sigmas filter, dt, fx fx fx args... filter.x, filter.P UT filter.sigmas f, filter.Wm, filter.Wc, noise cov filter.Q, mean fn filter.x mean fn, residual fn filter.residual x same output as filterpy if the following line is commented likely a bug in filterpy filter.sigmas f sigma points filter.points fn, filter.x, filter.P filter.x prior copy filter.x filter.P prior copy filter.P end function update filter UnscentedKF, z R filter.R, UT Function unscented transform, hx Function filter.hx, hx args... if length R 1 R I R end sigmas h zeros size filter.sigmas f 1 , filter.z dim for i, s in enumerate eachrow filter.sigmas f sigmas h i, hx s hx args... end filter.sigmas h copy sigmas h zp, filter.S UT filter.sigmas h, filter.Wm, filter.Wc, noise cov R, mean fn filter.z mean fn, residual fn filter.residual z filter.SI inv filter.S Pxz cross variance filter, filter.x, zp, filter.sigmas f, filter.sigmas h filter.K Pxz filter.SI filter.y filter.residual z z, zp filter.x filter.state add filter.x, filter.K filter.y filter.P filter.P filter.K filter.S filter.K' filter.z copy z filter.x post copy filter.x filter.P post copy filter.P end function batch filter filter UnscentedKF, zs Rs fill filter.R, size zs 1 , dts fill filter.dt, size zs 1 , UT unscented transform size zs 2 filter.z dim || throw DimensionMismatch \"size zs 2 must be equal to filter.z dim\" size zs 1 size Rs 1 || throw DimensionMismatch \"Rs must be an array of arrays with size Rs 1 size zs 1 \" n size zs 1 means zeros n, filter.x dim covariances fill zeros filter.x dim, filter.x dim , n for i, z in enumerate eachrow zs predict filter, dt dts i , UT UT update filter, z, R Rs i , UT UT means i, filter.x covariances i filter.P end return means, covariances end function rts smoother filter UnscentedKF, Xs, Ps Qs fill filter.Q, size Xs 1 , dts fill filter.dt, size Xs 1 , UT unscented transform size Xs 1 size Ps 1 || throw DimensionMismatch \"length of Xs and Ps must be the same\" n, x dim size Xs Ks fill zeros x dim, x dim , n num sigmas filter.num sigmas xs, ps copy Xs , copy Ps sigmas f zeros num sigmas, x dim for k in n 1 1 1 sigmas sigma points filter.points fn, xs k, , ps k for i in 1 num sigmas sigmas f i, filter.fx sigmas i, , dts k end xb, Pb UT sigmas f, filter.Wm, filter.Wc, noise cov filter.Q, mean fn filter.x mean fn, residual fn filter.residual x Pxb zeros size sigmas f 2 , size sigmas f 2 for i in 1 num sigmas y filter.residual x sigmas f i, , xb z filter.residual x sigmas i, , Xs k, Pxb filter.Wc i z y' end K Pxb inv Pb xs k, K filter.residual x xs k 1, , xb ps k K ps k 1 . Pb K' Ks k K end return xs, ps, Ks end end "},{"url":"filters/noise/","title":"noise","tags":[],"text":"module noise contains some common useful functions export discrete white noise, continuous white noise \"\"\" discrete white noise dim, dt 1., var 1. Returns the Q matrix for Discrete Constant White Noise Model. `dim` ∈ 2,3,4 is the number of dimensions, dim 2 for constant velocity, dim 3 for constant acceleration and dim 4 for constant jerk, `dt` is the time step and `var` is the variance in the noise. Example ```julia repl julia discrete white noise 2, dt 0.1, var 1. 2×2 Array Float64,2 2.5e 5 0.0005 0.0005 0.01 \"\"\" function discrete white noise dim Int dt Real 1.0, var Real 1.0 dim in 1, 2, 3 || throw DimensionMismatch \"dim must be between 2 and 4\" if dim 2 Q 0.25 dt^4 0.5 dt^3 0.5 dt^3 dt^2 elseif dim 3 Q 0.25 dt^4 0.5 dt^3 0.5 dt^2 0.5 dt^3 dt^2 dt 0.5 dt^2 dt 1.0 else Q dt^6 36 dt^5 12 dt^4 6 dt^3 6 dt^5 12 dt^4 4 dt^3 2 dt^2 2 dt^4 6 dt^3 2 dt^2 dt dt^3 6 dt^2 2 dt 1.0 end return Q . var end \"\"\" continuous white noise dim, dt 1., S 1. Returns the Q matrix for Discretized Continuous White Noise Model. `dim` ∈ 2,3,4 is the number of dimensions, dim 2 for constant velocity, dim 3 for constant acceleration and dim 4 for constant jerk, `dt` is the time step and `S` is the spectral density for the continuous process. Examples ```julia repl julia continuous white noise 2, dt 0.1, S 1. 2×2 Array Float64,2 0.000333333 0.005 0.005 0.1 \"\"\" function continuous white noise dim Int dt Real 1.0, S Real 1.0 dim in 1, 2, 3 || throw DimensionMismatch \"dim must be between 2 and 4\" if dim 2 Q dt^3 3 dt^2 2 dt^2 2 dt elseif dim 3 Q dt^5 20.0 dt^4 8.0 dt^3 6.0 dt^4 8.0 dt^3 3.0 dt^2 2.0 dt^3 6.0 dt^2 2.0 dt else Q dt^7 252.0 dt^6 72.0 dt^5 30.0 dt^4 24.0 dt^6 72.0 dt^5 20.0 dt^4 8.0 dt^3 6.0 dt^5 30.0 dt^4 8.0 dt^3 3.0 dt^2 2.0 dt^4 24.0 dt^3 6.0 dt^2 2.0 dt end return Q . S end end "},{"url":"filters/sigma_points/","title":"sigma_points","tags":[],"text":"module sigma points generate sigma points for unscented transform export MerweScaledSigmaPoints, JulierSigmaPoints, sigma points using LinearAlgebra Base. kwdef struct MerweScaledSigmaPoints n Int alpha Real beta Real kappa Real 0.0 sqrt fn Function cholesky subtract Function num sigmas Int 2n 1 Wm AbstractVector zeros num sigmas Wc AbstractVector zeros num sigmas function MerweScaledSigmaPoints n, alpha, beta, kappa, sqrt fn, subtract, num sigmas, Wm, Wc compute weights lambda alpha^2 n kappa n c 0.5 n lambda Wc 1 lambda n lambda 1 alpha^2 beta Wc 2 end . c Wm 1 lambda n lambda Wm 2 end . c new n, alpha, beta, kappa, sqrt fn, subtract, num sigmas, Wm, Wc end end function sigma points method MerweScaledSigmaPoints, x AbstractArray, P AbstractArray method.n length x || throw DimensionMismatch \"expected size x method.n , got length x \" if length P 1 P I P end n method.n lambda method.alpha^2 n method.kappa n U method.sqrt fn Symmetric lambda n P .U sigmas zeros 2n 1, n sigmas 1, x for k in 1 n sigmas k 1, method.subtract x , U k, sigmas n k 1, method.subtract x , U k, end return sigmas end Base. kwdef struct JulierSigmaPoints n Int kappa Real 0.0 sqrt fn Function cholesky subtract Function num sigmas Int 2n 1 Wm AbstractVector zeros num sigmas Wc AbstractVector zeros num sigmas function JulierSigmaPoints n, kappa, sqrt fn, subtract, num sigmas, Wm, Wc Wm 1 kappa n kappa Wm 2 end . 0.5 n kappa Wc copy Wm new n, kappa, sqrt fn, subtract, num sigmas, Wm, Wc end end function sigma points method JulierSigmaPoints, x AbstractArray, P AbstractArray method.n length x || throw DimensionMismatch \"expected size x method.n , got length x \" if length P 1 P I P end n method.n U method.sqrt fn Symmetric method.kappa n P .U sigmas zeros 2n 1, n sigmas 1, x for k in 1 n sigmas k 1, method.subtract x , U k, sigmas n k 1, method.subtract x , U k, end return sigmas end end "},{"url":"filters/stats/","title":"stats","tags":[],"text":"module stats implements some common statistical functions export mahalanobis, log pdf, log likelihood, likelihood export gaussian, mul, add, covariance ellipse export Normal, MvNormal, pdf, mean, var, cov using Statistics using Distributions using LinearAlgebra FloatOrArray Union Real,AbstractArray \"\"\" mahalanobis x, y, cov Returns the mahalanobis distance between `x` and `y` Examples ```julia repl julia mahalanobis 3., 3.5, 4.0^2 univariate case 0.125 julia mahalanobis 3., 6., 1. univariate, 3 std away 3.0 julia mahalanobis 1., 2 , 1.1, 3.5 , 1. .1 .1 13 0.4253332705891392 ``` \"\"\" function mahalanobis x FloatOrArray, y FloatOrArray, cov FloatOrArray size x size y || throw DimensionMismatch \"size of x not equal to size of y\" dist sqrt y . x ' inv cov y . x return dist end \"\"\" log pdf d Distribution, x Union Real, AbstractArray Real Computes the log of the probability density function of the normal distribution N mean, cov for the data x. The normal may be univariate or multivariate. \"\"\" log pdf d Distribution, x FloatOrArray Distributions.logpdf d, x \"\"\" log likelihood z, x, P, H, R Returns log likelihood of the measurement z given the Gaussian posterior x, P using measurement function H and measurement covariance error R \"\"\" log likelihood z Real, x Real, P Real, H Real, R Real log pdf Normal H x, sqrt H P H R , z log likelihood z AbstractArray, x AbstractArray, P AbstractArray, H AbstractArray, R AbstractArray log pdf MvNormal H x, H P H' R , z \"\"\" likelihood z, x, P, H, R Returns likelihood of the measurement z given the Gaussian posterior x, P using measurement function H and measurement covariance error R \"\"\" likelihood z, x, P, H, R exp log likelihood z, x, P, H, R \"\"\" gaussian x, mean, var Returns un normalized probability density function pdf for x given a Gaussian with the specified mean and variance. For univariate distribution • If `x` is a scalar, it returns a scalar • If `x` is a vector, it returns a vector with pdf at given points For multivariate distribution • If `x` is a vector, it returns the result as a scalar. • If `x` is a matrix with n columns, it returns a vector `r` of length n, where `r i ` corresponds to `x ,i ` i.e. treating each column as a sample . \"\"\" gaussian x Real, mean Real, var Real pdf Normal mean, sqrt var , x gaussian x AbstractArray, mean Real, var Real pdf. Normal mean, sqrt var , x gaussian x AbstractArray, mean AbstractArray, cov AbstractArray pdf MvNormal mean, cov , x \"\"\" mul d1 Distribution, d2 Distribution Returns the product of the two gaussian distributions \"\"\" function mul d1 UnivariateDistribution, d2 UnivariateDistribution mean1 Statistics.mean d1 mean2 Statistics.mean d2 size mean1 size mean2 || throw DimensionMismatch \"size of distributions must be equal\" var1 Statistics.var d1 var2 Statistics.var d2 var3 1.0 1.0 var1 1.0 var2 mean3 var1 mean2 var2 mean1 var1 var2 return Normal mean3, sqrt var3 end function mul d1 MultivariateDistribution, d2 MultivariateDistribution mean1 Statistics.mean d1 mean2 Statistics.mean d2 size mean1 size mean2 || throw DimensionMismatch \"size of distributions must be equal\" var1 Statistics.cov d1 var2 Statistics.cov d2 sum inv inv var1 var2 var3 var1 sum inv var2 mean3 var2 sum inv mean1 var1 sum inv mean2 return MvNormal mean3, var3 end \"\"\" add d1 Distribution, d2 Distribution Returns the sum of the two gaussian distributions \"\"\" function add d1 UnivariateDistribution, d2 UnivariateDistribution mean1 Statistics.mean d1 mean2 Statistics.mean d2 size mean1 size mean2 || throw DimensionMismatch \"size of distributions must be equal\" var1 Statistics.var d1 var2 Statistics.var d2 mean3 mean1 mean2 var3 var1 var2 return Normal mean3, sqrt var3 end function add d1 MultivariateDistribution, d2 MultivariateDistribution mean1 Statistics.mean d1 mean2 Statistics.mean d2 size mean1 size mean2 || throw DimensionMismatch \"size of distributions must be equal\" var1 Statistics.cov d1 var2 Statistics.cov d2 mean3 mean1 . mean2 var3 var1 . var2 return MvNormal mean3, var3 end \"\"\" covariance ellipse P, deviations 1.0 Returns a tuple angle, width, height defining the covariance ellipse representing the 2 dimensional covariance matrix P \"\"\" function covariance ellipse P AbstractArray deviations Real 1.0 size P 2, 2 || throw DimensionMismatch \"P must be a 2x2 matrix\" U, s, svd P orientation atan U 2, 1 , U 1, 1 width deviations sqrt s 1 height deviations sqrt s 2 height width || throw ErrorException \"width must be greater than height\" return orientation, width, height end end "},{"url":"math/math_01_calculus/","title":"Calculus Basics","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 1 order 1 title \"Calculus Basics\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using ForwardDiff, ReverseDiff, QuadGK using CairoMakie using PlutoUI using PlutoUI Slider md\" Calculus\" TableOfContents md\" Forward Mode Automatic Differentiation\" md\" Define Function\" f x x^3 x md\" Find Derivative\" md\" \\frac dy dx f' x \\dot y \" md\" f' x \\lim h → 0 \\frac f x h f x h \" md\"where x is a fixed value of the function f x and h is a number close to zero.\" md\" Define Tangent Line Segment\" md\" y mx b \" md\"where m is the slope and b is the y intercept.\" x range 2.0 0.01 2.0 md\" Control Panel\" md\"x bind x Slider x range, 0.0, true \" x left x 1 x right x 1 md\" Reverse Mode Automatic Differentiation\" md\"Code Source ReverseDiff.jl Gradient Example in GitHub https github.com JuliaDiff ReverseDiff.jl blob master examples gradient.jl \" md\" Define Function\" f A, B sum A' B A B' y f x dydx slope ForwardDiff.derivative f, x bias y slope x y left slope x left bias y right slope x right bias md\"\"\" x x | f x y | f' x dydx \"\"\" begin figf Figure axf Axis figf 1, 1 , title \"Relationship between x, f x and f' x \", xlabel \"x\", ylabel \"f x \" lines axf, x range, f. x range lines axf, x left, x right , y left, y right , linewidth 2, color red scatter x, y, markersize 20, strokecolor black, strokewidth 2, color lightgreen figf end md\" Generate Inputs by using Random Numbers\" A, B rand 100, 100 , rand 100, 100 c f A, B inputs A, B md\" Find Gradient\" md\"\"\" Note Conceptually, a Gradient is the same as a Derivative, but the term Gradient is typically used for functions with several inputs and a single output. \"\"\" ReverseDiff.gradient f, inputs md\"Note See GitHub repository for more optimal examples.\" md\" Numerical Integration\" md\" Define Function\" f2 x sqrt x md\" Assign Limits of Integration\" md\" a, b \" md\" Evaluate Integrals\" md\" Area Under a Curve\" md\" A \\int a ^ b f x \\text d x \" md\"\"\" \"The integral from a to b of f of x, dx.\" \"\"\" md\" Control Panel\" md\"\"\" a bind a Slider 0.0 0.01 4.0, 0.0, true | b bind b Slider 0.0 0.01 4.0, 4.0, true \"\"\" xs a b ? a 0.01 b b 0.01 a ya round f2 a , digits 2 yb round f2 b , digits 2 dyda round ForwardDiff.derivative f2, a , digits 2 dydb round ForwardDiff.derivative f, b , digits 2 area, area error quadgk f2, a, b A2 round area, digits 2 begin figi Figure axi Axis figi 1, 1 , title \"Numerical Integration\", xlabel \"x\", ylabel \"f x \" lines axi, xs, f2. xs , linewidth 10, color red band axi, xs, 0, f2. xs , color lightblue hlines 0 , linewidth 2, color green xlims 0, 4 ylims 0, 2 figi end md\" Volume of a Solid of Revolution around x axis \" md\" V \\int a ^ b π f x ^2 \\text d x \" md\"Arc Length\" md\" s \\int a ^ b \\sqrt 1 \\left \\frac dy dx \\right ^2 \\text d x \" md\"Area of a Surface of Revolution around x axis \" md\" S \\int a ^ b 2 π f x \\sqrt 1 \\left \\frac dy dx \\right ^2 \\text d x \" volume, volume error quadgk x π f2 x ^2, a, b V round volume, digits 2 md\"\"\" a a | b b | f a ya | f b yb | f' a dyda | f' b dydb \\ Area A2 | Volume x axis V \"\"\" function plotcircles ax, a, b for x in LinRange a, b, 20 θ LinRange 0, 2π, 360 lines ax, fill x, 360 , f2 x cos. θ , f2 x sin. θ , linewidth 2, color dodgerblue end end begin figi3 Figure axi3 Axis3 figi3 1, 1 , title \"Revolution Around X Axis\", xlabel \"x\", ylabel \"y\", zlabel \"z\", aspect data, azimuth 0.3π plotcircles axi3, a, b lines axi3, 0, 4 , 0, 0 , 0, 0 , color black xlims 0, 4 , ylims 2, 2 , zlims 2, 2 figi3 end md\" Arc Length\" md\" s ∫ a ^ b \\sqrt 1 \\left \\frac dy dx \\right ^2 dx \" arc length, arc error quadgk x sqrt 1 ForwardDiff.derivative f2, x ^2 , a, b s round arc length, digits 2 md\" Area of a Surface of Revolution around x axis \" md\" S ∫ a ^ b 2πf x \\sqrt 1 \\left \\frac dy dx \\right ^2 dx \" surface area, surface error quadgk x 2 pi f2 x sqrt 1 ForwardDiff.derivative f2, x ^2 , a, b S round surface area, digits 2 md\"\"\" a a | b b | f a ya | f b yb | f' a dyda | f' b dydb \\ Area A2 | Volume x axis V | Arc Length s | Surface Area x axis S \"\"\" "},{"url":"math/math_02_ode_1st/","title":"First Order ODE","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 2 order 2 title \"First Order ODE\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using PlutoUI using PlutoUI Slider using CairoMakie md\" Ordinary Differential Equation 1st Order\" md\" Add Packages\" TableOfContents md\" Continuous Compound Interest\" md\" Describe Problem\" md\" ODE in DifferentialEquations.jl\" md\" Define Function\" md\" Continuous Compound Interest in Math\" md\" \\frac du dt pu \" md\" Continuous Compound Interest in Julia\" f u, p, t p u md\" Assign Variables\" md\" u Bank Account Balance\" md\" p Annual Interest Rate\" md\" t Time in Years\" t begin 0.0 md\" Define ODE Problem\" md\" Solve Problem\" md\" Plot Solution\" md\"Years bind t end Slider 1.0 50.0, 1.0, true \" tspan t begin, t end md\"Interest Rate bind p Slider 0.01 0.01 1.0, 1.0, true \" md\"Beginning Balance bind u begin Slider 1.0 1000.0, 1.0, true \" prob ODEProblem f, u begin, tspan, p sol solve prob md\"Ending Balance round Int, sol t end \" begin fig Figure ax Axis fig 1, 1 , title \"Continuous Compound Interest\", xlabel \"Time in Years\", ylabel \"Account Balance in Dollars\" lines ax, sol, linewidth 2 ax.xlims 0.0 50.0 ax.ylims 0.0 1 000 000.0 fig end sol 1 md\" Appendix Euler's Number\" EULER ℯ e est sol 1 EULER e est md\" Verhulst Equation\" md\"Reference Wikipedia Article https en.wikipedia.org wiki Pierre Fran%C3%A7ois Verhulst \" md\" Define Function\" md\" Verhulst Equation in Math\" md\"Version of equation popularized by Raymond Pearl and Lowell Reed \" md\" \\frac dN dt rN \\left 1 \\frac N K \\right \" md\"where N is the population at any time t ,\" md\"and r is the growth rate of the population,\" md\"and K is the maximum population that the environment can support.\" md\" Verhulst Equation in Julia\" md\" f u, p, t p 1 u \\left 1 \\frac u p 2 \\right \" f u, p, t p 1 u 1 u p 2 function verhulst u, p, t N u r, K p r N 1 N K end md\" Assign Variables\" md\" u Population\" md\" p Parameters\" md\" r Growth Rate per Month\" md\" K Maximum Population\" md\" t Time in Months\" tv begin 0.0 md\" Define ODE Problem\" md\" Solve Problem\" md\" Plot Solution\" md\"Maximum Population K bind K Slider 100.0 200.0, 200.0, true \" md\"Months bind tv end Slider 1.0 72.0, 72.0, true \" tvspan tv begin, tv end md\"Growth Rate r bind r Slider 0.01 0.01 1.0, 0.14, true \" pv r, K md\"Beginning Population bind N begin Slider 1.0 20.0, 1.0, true \" probv ODEProblem verhulst, N begin, tvspan, pv solv solve probv md\"Ending Population round Int, sol tv end \" begin figv Figure axv Axis figv 1, 1 , title \"Verhulst Equation\", xlabel \"Time in Months\", ylabel \"Rabbit Population\" lines axv, solv, linewidth 2 ax.xlims 0.0 50.0 ax.ylims 0.0 1 figv end "},{"url":"math/math_03_ode_2nd/","title":"Second Order ODE","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 3 order 3 title \"Second Order ODE\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using CairoMakie using PlutoUI using PlutoUI Button, Slider md\" Ordinary Differential Equation 2nd Order\" md\" Add Packages\" TableOfContents md\" Projectile Motion\" md\" Describe Problem\" md\" 1st Order Ordinary Differential Equation\" md\" Relationship between Position, Velocity and Acceleration\" md\" u position \" md\"First Order Derivative of Position with respect to Time \" md\" \\frac du dt velocity \" md\"First Order Derivative of Velocity with respect to Time \" md\" \\frac dv dt acceleration \" md\"Example Meters per Second per Second \" md\" \\frac m s^2 \" md\" 2nd Order Ordinary Differential Equation\" md\"Second Derivative of Position with respect to Time \" md\" \\frac d^2u dt^2 acceleration \" md\" DifferentialEquations.jl\" md\" \\frac d^2u dt^2 f du, u, p, t \" md\"where u is the unknown function and du is the first derivative of u with respect to t .\" md\" Projectile Motion Problem\" md\" f du, u, p, t 0, g \" md\"where g is the frictionless, free fall gravitational acceleration.\" md\" Define Function\" md\" Gravitational Accelerations in \\frac m s^2 \" md\"Source Wikipedia Article https en.wikipedia.org wiki Gravitational acceleration \" const g EARTH 9.8067 const g MOON 1.625 const g MARS 3.728 md\" Assign Variables\" md\" du Velocity in Meters per Second\" md\" \\cos θ \\frac \\text adjacent \\text hypotenuse \\frac vx v \" md\" \\sin θ \\frac \\text opposite \\text hypotenuse \\frac vy v \" md\" u Position in Meters\" x begin 0.0 y begin 0.0 u begin x begin, y begin md\" t Time in Seconds\" t begin 0.0 md\" Define ODE Problem\" md\" Solve Problem\" md\" Plot Solution\" bind select g Select \"Earth\", \"Moon\", \"Mars\" if select g \"Moon\" g g MOON elseif select g \"Mars\" g g MARS else g g EARTH end f du, u, p, t 0, g md\"Seconds bind t end Slider 0.0 0.1 20.0, 20.0, true \" tspan t begin, t end md\"Initial Velocity m s bind v begin Slider 50.0 150.0, 100.0, true \" md\"Angle in Degrees bind θ Slider 0.0 90.0, 45.0, true \" vx begin cosd θ v begin vy begin sind θ v begin du begin vx begin, vy begin prob SecondOrderODEProblem f, du begin, u begin, tspan sol solve prob sol 20 1 sol 20 4 md\"\"\" x Position m round sol t end 3 digits 2 | y Position m round sol t end 4 digits 2 | x Velocity m s round sol t end 1 digits 2 | y Velocity m s round sol t end 2 digits 2 \"\"\" begin fig Figure ax Axis fig 1, 1 , title \"Projectile Motion All Values \", xlabel \"Time in Seconds\", ylabel \"Velocity m s | Position m \" labels \"x Velocity\", \"y Velocity\", \"x Position\", \"y Position\" for col, label in enumerate labels lines ax, sol.t, sol col, , linewidth 2, label label end axislegend fig end begin fig2 Figure ax2 Axis fig2 1, 1 , title \"Projectile Motion Trajectory \", xlabel \"x Position m \", ylabel \"y Position m \" lines ax2, sol 3, , sol 4, , linewidth 2 fig2 end md\" Simple Harmonic Motion\" md\"Source Wikipedia Article https en.wikipedia.org wiki Simple harmonic motion \" md\" Describe Problem\" md\" Second Order Ordinary Differential Equation\" md\"From Hooke's Law \" md\" F s kx \" md\"where F s is the restoring force of the spring, k is a positive number, characteristic of the spring and x is the displacement from the equilibrium or mean position.\" md\"From Newton's Second Law of Motion \" md\" F ma \" md\"where m is the mass of the object and a is the acceleration.\" md\"From the last tutorial \" md\" a \\frac d^2x dt^2 \" md\"where the acceleration, a , is the second derivative of position, x , with respect to time.\" md\"Combine equations \" md\" F m \\frac d^2x dt^2 kx \" md\" \\frac d^2x dt^2 \\frac k m x \" md\"\\\"where m is the inertial mass of the oscillating body, x is the displacement from the equilibrium or mean position and k is a constant the spring constant for a mass on a spring .\\\" Wikipedia\" md\" DifferentialEquations.jl\" md\" \\frac d^2u dt^2 f du, u, p, t \" md\" Simple Harmonic Motion Problem\" md\" f du, u, p, t \\frac p 1 p 2 u \" md\" Define Julia Function\" function harmonic du, u, p, t dx du x u k, m p k m x end md\" Assign Variables\" md\" du Velocity in Meters per Second\" dx begin 0.0 md\" u Position in Meters\" md\" p Parameters\" md\" k Spring Constant in Newtons per Meter\" md\" m Mass in Kilograms\" md\" t Time in Seconds\" md\" Define Second Order ODE Problem\" md\" Solve Problem\" md\" Plot Solution\" bind reset Button \"Reset Sliders\" begin reset md\"\"\" Time seconds bind tm end Slider 0.0 0.01 20.0, 20.0, true | Initial Position m bind xx begin Slider 0.25 0.01 0.25, 0.25, true \"\"\" end tmspan t begin, tm end begin reset md\"\"\" Spring Constant N m bind k Slider 0.5 0.01 2.0, 1.0, true | Mass kg bind m Slider 0.5 0.01 2.0, 1.0, true \"\"\" end p k, m probm SecondOrderODEProblem harmonic, dx begin, xx begin, tmspan, p solm solve probm position solm tm end 2 velocity solm tm end 1 acceleration k m position begin fig3 Figure ax3 Axis fig3 1, 1 , title \"Simple Harmonic Motion All Values \", xlabel \"Time seconds \", ylabel \"Velocity m s | Position m \" labels2 \"Position\", \"Velocity\" for col, label in enumerate labels2 lines ax3, solm.t, solm col, , linewidth 2, label label end fig3 end begin fig4 Figure ax4 Axis fig4 1, 1 , title \"Simple Harmonic Motion Phase Space \", xlabel \"Position m \", ylabel \"Velocity m s \" lines ax4, solm 2, , solm 1, , linewidth 2 scatter ax4, position, velocity, color red, markersize 10 xlims ax4, 0.5, 0.5 ylims ax4, 0.5, 0.5 fig4 end md\" Appendix Period T \" md\" T 2 π \\sqrt \\frac m k \" period 2 pi sqrt m k md\"\"\" Position m round position digits 2 | Velocity m s round velocity digits 2 | Acceleration m s s round acceleration digits 2 | Period s round period digits 2 \"\"\" md\"\"\" Position m round position digits 2 | Velocity m s round velocity digits 2 | Acceleration m s s round acceleration digits 2 | Period s round period digits 2 \"\"\" "},{"url":"math/math_04_ode_system/","title":"ODE Systems","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 3 order 3 title \"ODE Systems\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using CairoMakie using PlutoUI using PlutoUI Button, Slider using Colors md\" ODE Systems\" md\" Add Packages\" TableOfContents md\" Double Pendulum\" md\"Sources \" md\" Wikipedia Article on Double Pendulum https en.wikipedia.org wiki Double pendulum \" md\" Neumann, Erik 2002 . Double Pendulum Simulation at myphysicslab.com. https www.myphysicslab.com pendulum double pendulum en.html \" md\" Ma, Yingbo Rackauckas, Chris 2020 . \\\"Differential Equations Models\\\". https nextjournal.com sosiris de diffeq models \" md\" Describe Problem\" md\" System of 1st Order ODEs\" md\"Note see Numerical Solution Equations for Double Pendulum Simulation at myphysicslab.com.\" md\"Double Pendulum Problem\" md\" f du, u, p, t \\begin cases du 1 \\theta 1 ' \\omega 1 \\\\ du 2 \\theta 2 ' \\omega 2 \\\\ du 3 \\omega 1 ' \\\\ du 4 \\omega 2 ' \\end cases \" md\"Define Julia Function\" function double pendulum du, u, p, t theta1, theta2, omega1, omega2 u m1, m2, L1, L2, g p c cos theta1 theta2 s sin theta1 theta2 du 1 omega1 du 2 omega2 du 3 g 2 m1 m2 sin theta1 m2 g sin theta1 2 theta2 2 s m2 omega2^2 L2 omega1^2 L1 c L1 2 m1 m2 m2 cos 2 theta1 2 theta2 du 4 2 s omega1^2 L1 m1 m2 g m1 m2 cos theta1 omega2^2 L2 m2 c L2 2 m1 m2 m2 cos 2 theta1 2 theta2 end md\" Assign Variables\" md\" u θ1, θ2, ω1 and ω2\" ω1 0.0 ω2 0.0 md\" p Parameters m1, m2, L1, L2 and g\" md\" t Time in Seconds\" t begin 0.0 md\" Solve Problem\" md\" Prep for Plotting\" md\" Plot Solution\" md\" Control Panel\" bind preset Button \"Reset\" begin preset md\"Time s bind t end Slider 0.0 0.01 100.0, 100.0, true \" end tspan t begin, t end begin preset md\"\"\" Initial Conditions || θ1 deg bind θ1d Scrubbable 0.0 0.1 180.0, default 90.0 | θ2 deg bind θ2d Scrubbable 0.0 0.1 180.0, default 120.0 \"\"\" end θ1 deg2rad θ1d θ2 deg2rad θ2d u begin θ1, θ2, ω1, ω2 begin reset md\"\"\" Parameters || m1 kg bind m1 Scrubbable 0.1 0.1 2.0, default 1.0 | m2 kg bind m2 Scrubbable 0.1 0.1 2.0, default 1.5 | L1 m bind L1 Scrubbable 0.1 0.1 2.0, default 1.5 | L2 m bind L2 Scrubbable 0.1 0.1 2.0, default 2.0 | g m s s bind g Scrubbable 9.8 0.0001 9.81, default 9.8067, format \".4f\" \"\"\" end pp m1, m2, L1, L2, g prob ODEProblem double pendulum, u begin, tspan, pp sol solve prob, Vern7 , reltol 1e 10, abstol 1e 10 begin fig Figure ax Axis fig 1, 1 , xlabel \"Time\" for col in range 1, 4 lines ax, sol.t, sol col, , linewidth 2 end fig end function polar2cart sol vars 1, 2 idx sol.t 1 0.01 sol.t end p1 map x x vars 1 , sol. idx p2 map y y vars 2 , sol. idx x1 L1 sin. p1 y1 L1 cos. p1 x2 L2 sin. p2 y2 L2 cos. p2 x1, y1 , x1 x2, y1 y2 end pendulum1, pendulum2 polar2cart sol x1 pendulum1 1 end y1 pendulum1 2 end x2 pendulum2 1 end y2 pendulum2 2 end begin figx1y1 Figure axx1y1 Axis figx1y1 1, 1 , title \"Double Pendulum Phase Space x2 y2\", xlabel \"x\", ylabel \"y\" lines axx1y1, pendulum1 1 , pendulum1 2 , linewidth 2 figx1y1 end begin figx2y2 Figure axx2y2 Axis figx2y2 1, 1 , title \"Double Pendulum Phase Space x2 y2\", xlabel \"x\", ylabel \"y\" lines axx2y2, pendulum2 1 , pendulum2 2 , linewidth 2 lines axx2y2, 0, x1, x2 , 0, y1, y2 , color black, linewidth 2 for pair, color in zip zip 0, x1, x2 , 0, y1, y2 , black, green, red scatter axx2y2, pair 1 , pair 2 , color color, markersize 20 end figx2y2 end md\"\"\" Time t end || x1 round x1 digits 2 | y1 round y1 digits 2 || x2 round x2 digits 2 | y2 round y2 digits 2 || \"\"\" md\" Three Body Problem\" md\"Source Wikipedia Article on Three Body Problem https en.wikipedia.org wiki Three body problem \" md\" Describe Problem\" md\" System of First Order Ordinary Differential Equations\" md\" \\begin align \\mathbf \\ddot r 1 & G m 2 \\frac \\mathbf r 1 \\mathbf r 2 | \\mathbf r 1 \\mathbf r 2 | ^3 G m 3 \\frac \\mathbf r 1 \\mathbf r 3 | \\mathbf r 1 \\mathbf r 3 | ^3 \\\\ \\mathbf \\ddot r 2 & G m 3 \\frac \\mathbf r 2 \\mathbf r 3 | \\mathbf r 2 \\mathbf r 3 | ^3 G m 1 \\frac \\mathbf r 2 \\mathbf r 1 | \\mathbf r 2 \\mathbf r 1 | ^3 \\\\ \\mathbf \\ddot r 3 & G m 1 \\frac \\mathbf r 3 \\mathbf r 1 | \\mathbf r 3 \\mathbf r 1 | ^3 G m 2 \\frac \\mathbf r 3 \\mathbf r 1 | \\mathbf r 3 \\mathbf r 1 | ^3 \\\\ \\end align \" md\"where the mass of the body is m i ,\" md\"the position of the body is \\mathbf r i x i, y i, z i ,\" md\"and G is the gravitational constant.\" md\" DifferentialEquations.jl\" md\" f du, u, p, t \\begin cases du 1 & vx 1 \\\\ du 2 & vy 1 \\\\ du 3 & vx 2 \\\\ du 4 & vy 2 \\\\ du 5 & vx 3 \\\\ du 6 & vy 3 \\\\ du 7 & vx 1 ' \\\\ du 8 & vy 1 ' \\\\ du 9 & vx 2 ' \\\\ du 10 & vy 2 ' \\\\ du 11 & vx 3 ' \\\\ du 12 & vy 3 ' \\\\ \\end cases \" md\"Define Julia Function\" function three body du, u, p, t position, velocity x1, y1, x2, y2, x3, y3, vx1, vy1, vx2, vy2, vx3, vy3 u mass m1, m2, m3 p velocity du 1 vx1 du 2 vy1 du 3 vx2 du 4 vy2 du 5 vx3 du 6 vy3 distance from body to body r12 sqrt x1 x2 ^2 y1 y2 ^2 r13 sqrt x1 x3 ^2 y1 y3 ^2 r23 sqrt x2 x3 ^2 y2 y3 ^2 acceleration set G 1 du 7 m2 x1 x2 r12^3 m3 x1 x3 r13^3 du 8 m2 y1 y2 r12^3 m3 y1 y3 r13^3 du 9 m3 x2 x3 r23^3 m1 x2 x1 r12^3 du 10 m3 y2 y3 r23^3 m1 y2 y1 r12^3 du 11 m1 x3 x1 r13^3 m2 x3 x2 r23^3 du 12 m1 y3 y1 r13^3 m2 y3 y2 r23^3 end md\" Assign Variables\" md\" u x1, y1, x2, y2, x3, y3, vx1, vy1, vx2, vy2, vx3, vy3\" md\" Initial Positions\" md\" Initial Conditions\" md\" p3 Parameters m1, m2, m3\" md\" t3 Time\" t3 begin 0.0 md\" Solve Problem\" md\" Prep for Plotting\" md\" Obtain Position Values from Solution\" function values sol dt 0.001 idx sol.t 1 dt sol.t end x1 values map value value 1 , sol. idx y1 values map value value 2 , sol. idx x2 values map value value 3 , sol. idx y2 values map value value 4 , sol. idx x3 values map value value 5 , sol. idx y3 values map value value 6 , sol. idx return x1 values, x2 values, x3 values , y1 values, y2 values, y3 values end md\" Plot Solution\" julia Colors.JULIA LOGO COLORS md\" Control Panel\" bind reset3 Button \"Reset\" begin reset3 bind t3 end Slider 0.0 0.001 100.0, 100.0, true end t3span t3 begin, t3 end begin reset3 md\"\"\" Positions || x1 bind x1 0 Scrubbable 2.0 0.1 2.0, default 1.0 | y1 bind y1 0 Scrubbable 2.0 0.1 2.0, default 0.0 | x2 bind x2 0 Scrubbable 2.0 0.1 2.0, default 1.0 | y2 bind y2 0 Scrubbable 2.0 0.1 2.0, default 0.0 | x3 bind x3 0 Scrubbable 2.0 0.1 2.0, default 0.0 | y3 bind y3 0 Scrubbable 2.0 0.1 2.0, default sqrt 3 | \"\"\" end begin reset3 md\"\"\" Velocities || vx1 bind vx1 0 Scrubbable 2.0 0.0001 2.0, default 0.148 cosd 60 , format \".4f\" | vy1 bind vy1 0 Scrubbable 2.0 0.0001 2.0, default 0.148 sind 60 , format \".4f\" | vx2 bind vx2 0 Scrubbable 2.0 0.0001 2.0, default 0.148 cosd 60 , format \".4f\" | vy2 bind vy2 0 Scrubbable 2.0 0.0001 2.0, default 0.148 sind 60 , format \".4f\" | vx3 bind vx3 0 Scrubbable 2.0 0.0001 2.0, default 0.148, format \".4f\" | vy3 bind vy3 0 Scrubbable 2.0 0.0001 2.0, default 0.0, format \".4f\" | \"\"\" end u3 begin x1 0, y1 0, x2 0, y2 0, x3 0, y3 0, vx1 0, vy1 0, vx2 0, vy2 0, vx3 0, vy3 0, begin reset3 md\"\"\" Masses || m1 bind m31 Scrubbable 0.01 0.01 2.0, default 0.1, format \".2f\" | m2 bind m32 Scrubbable 0.01 0.01 2.0, default 0.1, format \".2f\" | m3 bind m33 Scrubbable 0.01 0.01 2.0, default 0.1, format \".2f\" | \"\"\" end p3 m31, m32, m33 prob3 ODEProblem three body, u3 begin, t3span, p3 sol3 solve prob3, Vern7 , reltol 1e 16, abstol 1e 16 x values, y values values sol3 x1 end x values 1 end y1 end y values 1 end x2 end x values 2 end y2 end y values 2 end x3 end x values 3 end y3 end y values 3 end x values 1 begin fig3xy Figure ax3xy Axis fig3xy 1, 1 , title \"Three Body Problem\", xlabel \"x\", ylabel \"y\" colors julia.red julia.purple julia.green for ind, color in enumerate colors lines ax3xy, x values ind , y values ind , linewidth 2, color color end for pair in zip x1 end, x2 end, x3 end , y1 end, y2 end, y3 end , colors scatter ax3xy, pair 1 , pair 2 , markersize 25, color pair 3 end fig3xy end begin fig3a Figure ax3a Axis fig3a 1, 1 , xlabel \"Time\" for col in range 1, 4 lines ax3a, sol3.t, sol3 col, , linewidth 2 end fig3a end "},{"url":"math/math_05_attractors/","title":"Attractors","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 5 order 5 title \"Attractors\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using CairoMakie using PlutoUI using PlutoUI Button, Slider md\" Attractors\" TableOfContents md\" Lorenz System\" md\"Source Wikipedia Article on Lorenz System https en.wikipedia.org wiki Lorenz system \" md\" Lorenz, Edward Norton 1963 . \\\"Deterministic Nonperiodic Flow\\\". Journal of the Atmospheric Sciences. https journals.ametsoc.org view journals atsc 20 2 1520 0469 1963 020 0130 dnf 2 0 co 2.xml \" md\" Harris, William 2014 . \\\"How Chaos Theory Works\\\". Updated 2020. HowStuffWorks.com. https science.howstuffworks.com math concepts chaos theory4.htm \" md\" Describe Problem\" md\" System of First Order Ordinary Differential Equations\" md\" Lorenz System\" md\" \\begin align \\frac dx dt & σ y x \\\\ \\frac dy dt & x ρ z y \\\\ \\frac dz dt & xy β z \\end align \" md\"\\\"The equations relate the properties of a two dimensional fluid layer uniformly warmed from below and cooled from above. In particular, the equations describe the rate of change of three quantities with respect to time.\\\" Wikipedia\" md\"\\\"In these equations x is proportional to the intensity of the convective motion, while y is proportional to the temperature difference between the ascending and descending currents...The variable z is proportional to the distortion of the vertical temperature profile from linearity...\\\" Lorenz 1963 \" md\"\\\"...where σ represents the ratio of fluid viscosity to thermal conductivity, ρ represents the difference in temperature between the top and bottom of the system and β is the ratio of box width to box height.\\\" Harris 2014, 2020 \" md\" DifferentialEquations.jl\" md\" f du, u, p, t \\begin cases du 1 p 1 u 2 u 1 \\\\ du 2 u 1 p 2 u 3 u 2 \\\\ du 3 u 1 u 2 p 3 u 3 \\end cases \" md\" Define Julia Function\" function lorenz du, u, p, t x, y, z u σ, ρ, β p du 1 dx σ y x du 2 dy x ρ z y du 3 dz x y β z end md\" Assign Variables\" md\" u Unknown Functions x, y and z\" md\" p Parameters σ, ρ and β\" md\" t Time\" lt begin 0.0 lt end 100.0 ltspan lt begin, lt end md\" Define System of First Order ODEs Problem\" md\" Solve Problem\" md\" Prep for Plotting\" md\" Break Out t \" md\" Break Out u \" md\" Plot Solution\" md\" u with Respect to Time Plots\" md\" 2 Dimensional Phase Space Plots\" md\" 3 Dimensional Phase Space Plot\" md\" Control Panel\" bind reset Button \"Reset\" begin reset md\"\"\" Initial || x bind lx begin NumberField 0 1, default 0 || y bind ly begin NumberField 0 1, default 1 || z bind lz begin NumberField 0 1, default 0 \"\"\" end lu begin lx begin, ly begin, lz begin begin reset md\"\"\" Parameters || σ bind lσ Scrubbable 0.0 0.1 20.0, default 10.0 | ρ bind lρ Scrubbable 0.0 0.1 50.0, default 28.0 | β bind lβ Scrubbable 0.00 0.01 5.00, default 8 3, format \".2f\" \"\"\" end lp lσ, lρ, lβ lprob ODEProblem lorenz, lu begin, ltspan, lp soll solve lprob, reltol 1e 8, abstol 1e 8 soll.t n length soll.t begin reset md\"Index bind idx Slider 1 n, n, true \" end t view soll.t 1 idx time t idx soll.u u view soll.u 1 idx soll u matrix reduce hcat, u ' x soll u matrix , 1 convection x idx begin figx Figure axx Axis figx 1, 1 , title \"Lorenz System Convection \", xlabel \"t\", ylabel \"Convection x \" lines axx, t, x, linewidth 2 figx end y soll u matrix , 2 horizontal y idx begin figy Figure axy Axis figy 1, 1 , title \"Lorenz System Horizontal \", xlabel \"t\", ylabel \"Horizontal y \" lines axy, t, y, linewidth 2 figy end begin figxy Figure axxy Axis figxy 1, 1 , title \"Lorenz Attractor Phase Space x y \", xlabel \"Convection x \", ylabel \"Horizontal y \" lines axxy, x, y, linewidth 2 figxy end z soll u matrix , 3 vertical z idx begin figz Figure axz Axis figz 1, 1 , title \"Lorenz System Vertical \", xlabel \"t\", ylabel \"Vertical z \" lines axz, t, z, linewidth 2 figz end begin figxz Figure axxz Axis figxz 1, 1 , title \"Lorenz Attractor Phase Space x z \", xlabel \"Convection x \", ylabel \"Vertical z \" lines axxz, x, z, linewidth 2 figxz end begin figyz Figure axyz Axis figyz 1, 1 , title \"Lorenz Attractor Phase Space y z \", xlabel \"Horizontal y \", ylabel \"Vertical z \" lines axyz, y, z, linewidth 2 figyz end begin figxyz Figure axxyz Axis3 figxyz 1, 1 , title \"Lorenz Attractor Phase Space x y z \\n\\n\", xlabel \"Convection x \", ylabel \"Horizontal y \", zlabel \"Vertical z \", azimuth 0.2π lines axxyz, x, y, z, linewidth 2 scatter axxyz, convection, horizontal, vertical, color red, markersize 2 figxyz end begin figl Figure axl Axis figl 1, 1 , title \"Lorenz System\", xlabel \"t\", ylabel \"u\" labels2 \"Convection x \" \"Horizontal y \" \"Vertical z \" for col, label in enumerate labels2 lines axl, t, soll u matrix , col , linewidth 2, label label end figl end md\"\"\" Time t round time digits 2 | Convection x round convection digits 2 | Horizontal y round horizontal digits 2 | Vertical z round vertical digits 2 \"\"\" "},{"url":"math/math_06_sde/","title":"Stochastic Differential Equation","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 6 order 6 title \"Stochastic Differential Equation\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using CairoMakie using PlutoUI using PlutoUI Button, Slider md\" Stochastic Differential Equation\" md\"Sources \" md\" Wikipedia Article on Stochastic Differential Equation https en.wikipedia.org wiki Stochastic differential equation \" md\" DifferentialEquations.jl Documentation https diffeq.sciml.ai stable \" TableOfContents md\" SDE Version of Verhulst Equation\" md\" Define Julia Functions\" md\" ODE\" function verhulst uv, p, t N uv r, K p r N 1 N K end md\" Noise\" md\" Assign Variables\" md\" uv Population\" md\" pv Parameters\" md\" r Growth Rate per Month\" md\" K Maximum Population\" md\" tv Time in Months\" tv begin 0.0 md\"Note Time Step is required for SDE.\" tv step 0.01 md\" Define Problems\" md\" Define ODE Problem\" md\" Define SDE Problem\" md\" Solve Problems\" md\" Solve ODE Problem\" md\" Solve SDE Problem\" md\" Plot Solutions\" md\" Control Panel\" md\"Maximum Population K bind K Slider 100.0 200.0, 200.0, true \" md\"Months bind tv end Slider 0.0 72.0, 72.0, true \" tvspan tv begin, tv end md\"Beginning Population bind N begin Slider 1.0 100.0, 1.0, true \" bind new solv Button \"New Solution\" md\"Growth Rate r bind r Slider 0.1 0.01 1.0, 0.14, true \" pv r, K probv ODE ODEProblem verhulst, N begin, tvspan, pv solv ODE solve probv ODE md\"Volatility beta bind βv Slider 0.0 0.01 0.1, 0.0, true \" gv uv, p, t βv uv probv SDE SDEProblem verhulst, gv, N begin, tvspan, pv begin new solv solv SDE solve probv SDE, EM , dt tv step end begin figv Figure axv Axis figv 1, 1 , title \"SDE Version of Verhulst Equation\", xlabel \"Time in Months\", ylabel \"Rabbit Population\" lines axv, solv ODE.t, solv ODE.u, linewidth 2, label \"ODE\" lines axv, solv SDE.t, solv SDE.u, linewidth 2, label \"SDE\" axislegend position rb figv end md\"Ending Population round Int, solv SDE tv end \" "},{"url":"math/math_07_pde/","title":"Partial Differential Equation","tags":["math","track_comp","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 2 section 7 order 7 title \"Partial Differential Equation\" tags \"math\", \"track comp\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using CairoMakie using PlutoUI using PlutoUI Button, Slider md\" Partial Differential Equation PDE \" md\"Sources \" md\" Wikipedia Article on Heat Equation https en.wikipedia.org wiki Heat equation \" md\" Wikipedia Article on Partial Differential Equation https en.wikipedia.org wiki Partial differential equation \" md\" Wikipedia Article on Method of Lines https en.wikipedia.org wiki Method of lines \" md\" SciML Notes on PDEs https book.sciml.ai notes 14 PDEs Convolutions and the Mathematics of Locality \" md\" 3Blue1Brown YouTube Video on PDE DE2 https youtu.be ly4S0oi3Yz8?list PLZHQObOWTQDNPOjrT6KVlfJuKtYTftqH6 \" md\" Add Packages\" TableOfContents md\" 1 Dimensional Heat Equation\" md\" Describe Problem\" md\" Heat Equation\" md\" \\frac ∂ u ∂ t α \\frac ∂^2 u ∂ x^2 \" md\"where u is Temperature, x is position, t is time,\" md\"and α is a positive coefficient called the thermal diffusivity of the medium.\" md\" \\frac ∂^2 u ∂ x^2 \\frac u i 1 2 u i u i 1 dx^2 \" md\" DifferentialEquations.jl\" md\" f du, u, p, t \\begin cases du 1 p 1 \\left \\frac u 1 u 2 p 2 ^2 \\right \\\\ du 2 \\text end 1 p 1 \\left \\frac u i 1 2 u i u i 1 p 2 ^2 \\right \\\\ du \\text end p 1 \\left \\frac u \\text end 1 u \\text end p 2 ^2 \\right \\end cases \" md\"where du 1 is the left boundary, du \\text end is the right boundary, du 2 \\text end 1 are interior functions,\" md\"and p 1 is \\alpha and p 2 is dx , which is a discrete step in position.\" md\" Define Julia Function\" function heat equation du, u, p, t Parameters α, dx p Left Boundary du 1 α u 1 u 2 dx^2 Interior Points for i in 2 length u 1 du i α u i 1 2 u i u i 1 dx^2 end Right Boundary du end α u end 1 u end dx^2 end md\" Assign Variables\" md\" u Temperature T is a function of position x and time t\" md\" Position Along 1 D Wire\" L 1.0 dx 0.01 x 0.0 dx L md\" Initial Temperatures Along 1 D Wire\" md\" p Parameters α and dx\" md\"Note dx already defined above.\" md\" t Time\" t begin 0.0 md\" Define System of First Order ODEs Problem\" md\" Solve Problem\" md\" Plot Solution\" md\" Control Panel\" bind reset Button \"Reset\" begin reset md\"Time bind t end Slider 0.0 0.001 1.0, 0.0, true \" end tspan t begin, t end begin reset md\"\"\" Temperature || Left bind left temp Slider 0.0 0.01 1.0, 0.9, true | Right bind right temp Slider 0.0 0.01 1.0, 0.1, true || \"\"\" end u begin i L 2 ? left temp right temp for i in x begin reset md\"α bind α Slider 0.0 0.001 2.0, 0.5, true \" end p α, dx prob ODEProblem heat equation, u begin, tspan, p sol solve prob T sol end Tleft T 1 T25 T 25 T50 T 50 T51 T 51 T76 T 76 Tright T end md\"\"\" Temperatures along wire || Tleft round Tleft digits 2 | T25 round T25 digits 2 | T50 round T50 digits 2 | T51 round T51 digits 2 | T76 round T76 digits 2 | Tright round Tright digits 2 || \"\"\" begin fig Figure ax Axis fig 1, 1 , title \"1 D Heat Equation\", xlabel \"Position x \", ylabel \"Temperature T \" lines ax, x, T, linewidth 2 fig end "},{"url":"prob/prob_1_distributions/","title":"Distributions","tags":["prob","track_prob","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.47 frontmatter chapter 3 section 1 order 1 title \"Distributions\" tags \"prob\", \"track prob\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using Distributions using CairoMakie using PlutoUI using PlutoUI Slider md\" Probability Distributions\" TableOfContents md\" Continuous Distributions\" md\" Normal Distribution\" md\"Mean μ bind μ Slider 3.0 0.1 3.0, 0.0, true \" md\"Standard Deviation σ bind σ Slider 0.5 0.01 3.0, 1.0, true \" begin fign Figure axn Axis fign 1, 1 , title \"Normal Distribution, N μ, σ \", xlabel \"x\", ylabel \"pdf x \" lines axn, Normal μ, σ vlines μ vlines μ σ, μ σ xlims 5, 5 ylims 0, 0.9 fign end md\" Beta Distribution\" md\"α bind α Slider 0.1 0.1 5.0, 1.0, true \" md\"β bind β Slider 0.1 0.1 5.0, 1.0, true \" begin figb Figure axb Axis figb 1, 1 , title \"Beta Distribution, Beta α, β \", xlabel \"x\", ylabel \"pdf x \" lines axb, Beta α, β bx 0 0.01 1 lines axb, bx, zeros 101, 1 , 1 , pdf. Beta α, β , bx , color lightblue xlims 0, 1 ylims 0, 5 figb end md\" Uniform Distribution\" md\"a bind ua Slider 5. 1.0 3.0, 1.0, true \" md\"b bind ub Slider 4 1.0 9, 1.0, true \" begin figu Figure axu Axis figu 1, 1 , title \"Uniform Distribution, U ua, ub \", xlabel \"x\", ylabel \"pdf x \" ux 5.0 9.0 lines axu, ux, pdf. Uniform ua, ub , ux , linewidth 3 xlims 5, 12 ylims 0, 1 figu end md\" Discrete Distributions\" md\" Bernoulli Distribution\" md\"Success Rate p bind pb Slider 0.00 0.01 1.0, 0.5, true \" begin figd Figure axd Axis figd 1, 1 , title \"Bernoulli Distribution, B pb \", xlabel \"x\", ylabel \"pmf x \", xticks 1 1 10 stem axd, Bernoulli pb , stemwidth 3, markersize 12, color white, stemcolor blue, strokecolor blue, strokewidth 2 scatter axd, Bernoulli pb , markersize 8 xlims 0.2, 1.2 ylims 0, 1 figd end md\" Binomial Distribution\" md\"Number of Trials n bind n Slider 1 1 10, 1, true \" md\"Probability of Success p bind p Slider 0.00 0.01 1.0, 0.5, true \" begin figs Figure axs Axis figs 1, 1 , title \"Binomial Distribution, B n, p \", xlabel \"x\", ylabel \"pmf x \" stem axs, Binomial n, p , stemwidth 3, markersize 12, color white, stemcolor blue, strokecolor blue, strokewidth 2 scatter axs, Binomial n, p , markersize 8 xlims 0.5, 10.5 ylims 0, 1 figs end md\" Poisson Distribution\" md\"Average Rate of Occurrences λ bind λ Slider 1.0 0.1 10.0, 1.0, true \" begin figpo Figure axpo Axis figpo 1, 1 , title \"Poisson Distribution, B λ \", xlabel \"x\", ylabel \"pmf x \" stem axpo, Poisson λ , stemwidth 3, markersize 12, color white, stemcolor blue, strokecolor blue, strokewidth 2 scatter axpo, Poisson λ , markersize 8 xlims 0, 10 ylims 0, 1 figpo end "},{"url":"prob/prob_2_linreg/","title":"Linear Regression","tags":["prob","track_prob","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 3 section 2 order 2 title \"Linear Regression\" tags \"prob\", \"track prob\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using Turing, CairoMakie using GLM using TidierFiles, TidierData using PlutoUI using PlutoUI Slider md\" Bayesian Linear Regression\" TableOfContents md\" Percent of Water\" md\" Traditional Approach\" md\"inputs\" n 9 p 0.71 md\"model\" f n, p Int round n p md\"output\" w f n, p md\"try to back into the value of p\" w n p1 0.62 w1 f n, p1 p2 0.72 w2 f n, p2 md\" Bayesian Approach\" md\"observe data\" tosses 9 water 6 md\"define model\" model function globe toss tosses, water prior percent water ~ Beta 1, 1 likelihood water ~ Binomial tosses, percent water end md\"infer posterior distribution\" globe m globe toss tosses, water sampler NUTS samples 1 000 chain sample globe m, sampler, samples md\"visualize results\" begin figc Figure axc Axis figc 1, 1 , title \"Trace Plot of samples samples\", xlabel \"Sample\", ylabel \"Percent of Water\" lines axc, chain percent water , 1 xlims 20, 1020 ylims 0.2, 1.0 figc end begin figd Figure axd Axis figd 1, 1 , title \"Posterior Distribution approx \", xlabel \"Percent of Water\", ylabel \"Density\" density axd, chain percent water , 1 , color lightblue, 0.5 , strokecolor darkblue, 0.9 , strokewidth 3 xlims 0, 1 ylims 0, 3 figd end md\" Height vs. Weight\" howell1 read delim \".. data Howell1.csv\" delim \" \" howell1 adult chain howell1 begin filter age . 18 end md\" Non Bayesian Approach GLM.jl \" md\"define model\" ols lm formula weight ~ height , howell1 adult ols intercept coef ols 1 ols slope coef ols 2 md\"make predictions\" ols newX DataFrame height 140, 160, 175 ols predictions predict ols, ols newX md\"visualize results\" begin fig1 Figure ax1 Axis fig1 1, 1 , title \"Adult Weight Height Association GLM \", xlabel \"Height cm \", ylabel \"Weight kg \" scatter ax1, howell1 adult.height, howell1 adult.weight lines ax1, 1 samples, ols intercept . ols slope . 1 samples xlims 100, 200 ylims 0, 80 fig1 end md\" Bayesian Approach Turing.jl \" md\"define model\" model function my model weight, height prior intercept ~ Normal 0, 10 slope ~ Uniform 0, 1 error ~ Uniform 0, 10 likelihood avg weight intercept . slope . height weight ~ MvNormal avg weight, error end model r my model howell1 adult.weight, howell1 adult.height sampler r NUTS chain r sample model r, sampler r, samples newX 140, 160, 175 predictions predict my model missing, newX , chain r begin fig2 Figure ax2 Axis fig2 1, 1 , title \"Adult Weight Height Association Turing \", xlabel \"Height cm \", ylabel \"Weight kg \" scatter ax2, howell1 adult.height, howell1 adult.weight, color red, 0.6 for i in 1 samples intercept chain r i, 1, 1 slope chain r i, 2, 1 error chain r i, 3, 1 lines ax2, 1 samples, intercept . slope . 1 samples , color orange, 0.5 , linewidth 0.8 end xlims 100, 200 ylims 0, 80 fig2 end begin fig3 Figure titles \"Intercept\", \"Slope\", \"Error\" for ind in 1 3 ax Axis fig3 ind, 1 , title titles ind , xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, predictions \"weight ind \" , 1 , color blue, 0.8 ax2 Axis fig3 ind, 2 , title titles ind , xlabel \"Iteration\", ylabel \"Sample Values\" density ax2, predictions \"weight ind \" , 1 , color lightblue, 0.5 , strokecolor blue, 0.8 , strokewidth 1.5 xlims 10, 90 ylims 0, 0.1 end fig3 end "},{"url":"prob/prob_3_logreg/","title":"Logistic Regression","tags":["prob","track_prob","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 3 section 3 order 3 title \"Logistic Regression\" tags \"prob\", \"track prob\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using Turing, CairoMakie using TidierFiles using GLM using PlutoUI using PlutoUI Slider md\" Bayesian Logistic Regression\" TableOfContents md\" Equation for a Line\" md\" y mx b \" md\"where m is the slope and b is the y intercept.\" md\" Sigmoid Function\" md\" S x \\frac 1 1 e^ x \" md\"slope bind slope Slider 10.0 1.0 10.0, 1.0, true \" md\"intercept bind intercept Slider 5.0 1.0 5.0, 0.0, true \" y x intercept slope x S x 1 1 exp y x xs 10 10 begin figs Figure axl Axis figs 1, 1 , title \"Line\" lines axl, xs, y. xs , linewidth 2 hlines axl, 0 , color black vlines axl, 0 , color black xlims axl, 10, 10 ylims axl, 10, 10 axs Axis figs 1, 2 , title \"Sigmoid Curve\" lines axs, xs, S. xs , linewidth 2 hlines axs, 0.5 , color black, linestyle dash vlines axs, 0 , color black xlims axs, 10, 10 ylims axs, 0, 1 figs end md\" Wolfspider\" wolfspider read csv \".. data wolfspider.csv\" spider x wolfspider.feature spider y wolfspider.class spider matrix spider x spider y begin figw Figure axw Axis figw 1, 1 , title \"Wolf Spider Present 1 or Absent 0 \", xlabel \"Median Grain Size of Sand mm \", ylabel \"Probability of Presence\" sp data scatter axw, spider x, spider y, color red, markersize 15 xlims 0, 1.25 figw end md\" Define Model\" model function spider model grain size, presence prior intercept ~ Uniform 5, 0 slope ~ Uniform 0, 10 likelihood line intercept . slope . grain size p 1 . 1 . exp. line for i in eachindex p presence i ~ Bernoulli p i end end md\" Infer Posterior Probability\" spider m spider model spider x, spider y sampler w NUTS samples 1 000 chain w sample spider m, sampler w, samples md\" Visualize Results\" begin figws Figure titles \"intercept\", \"slope\" for ind in 1 2 ax Axis figws ind, 1 , title titles ind , xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, chain w titles ind , 1 ax2 Axis figws ind, 2 , title titles ind , xlabel \"Iteration\", ylabel \"Sample Values\" density ax2, chain w titles ind , 1 , color lightblue, 0.5 , strokecolor blue, 0.8 , strokewidth 1.5 end figws end xws 0.0 0.01 1.2 for i in 1 samples intercept w chain w i, 1, 1 slope w chain w i, 2, 1 line x intercept w slope w x pw x 1 1 exp line x lines axw, xws, pw, color blue, 0.03 end figw md\" Predictions\" newXw 0.25, 0.5, 0.75, 1.0 p spider fill missing, length newXw predictions w predict spider model newXw, p spider , chain w begin figp Figure for ind in 1 4 ax Axis figp ind, 1 , title \"presence ind \", xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, predictions w \"presence ind \" , 1 , color lightblue, 0.8 ax2 Axis figp ind, 2 , title \"presence ind \", xlabel \"Iteration\", ylabel \"Sample Values\" hist ax2, predictions w \"presence ind \" , 1 , color lightblue, 0.8 end figp end "},{"url":"prob/prob_4_posreg/","title":"Poisson Regression","tags":["prob","track_prob","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 3 section 4 order 4 title \"Poisson Regression\" tags \"prob\", \"track prob\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using Turing, CairoMakie using TidierFiles, TidierData using GLM using PlutoUI using PlutoUI Slider md\" Bayesian Possion Regression\" TableOfContents md\" Pollen\" pollen read csv \".. data pollen meds.csv\" md\" Split Data\" noPollen noMeds chain pollen begin filter pollen 0 && meds 0 end noPollen Meds chain pollen begin filter pollen 0 && meds 1 end Pollen noMeds chain pollen begin filter pollen 1 && meds 0 end Pollen Meds chain pollen begin filter pollen 1 && meds 1 end md\" Visualize Data\" titles p \"No Pollen, No Meds\", \"No Pollen, Meds\", \"Pollen, No Meds\", \"Pollen, Meds\" data p noPollen noMeds.count, noPollen Meds.count, Pollen noMeds.count, Pollen Meds.count data p 1 2 begin figps Figure axs Axis figps row, col for row in 1 2, col in 1 2 for ind, ax in enumerate axs hist ax, data p ind ax.title titles p ind end figps end md\" Features & Labels\" features Matrix chain pollen begin select pollen, meds end labels pollen.count md\" Concepts\" md\" Multiple Linear Regression\" md\" y i β 0 β 1x i1 β 2x i2 … β px ip ϵ i \" md\"where, for i 1, ..., n observations\" md\" Log Transformation\" md\"Log transformation is a method of transforming datasets from nonlinear to linear and vice versa.\" md\"Log transformations are often recommended for skewed data to help spead out the data.\" md\"Examples include Power, Exponential, Square Root, Logarithmic and Hyperbolic.\" md\" Data for Plotting\" md\"intercept β 0 bind intercept Slider 1.0 0.1 1.0, 0.0, true \" md\"coefficient 1 β 1 bind coeff1 Slider 0.25 0.01 0.25, 0.0, true \" md\"coefficient 2 β 2 bind coeff2 Slider 0.25 0.01 0.25, 0.0, true \" line x intercept coeff1 x coeff2 x log transform x exp line x xs 10.0 0.1 10.0 ys1 line x for x in xs ys2 log transform x for x in xs begin figl Figure ax Axis figl 1, 1 , title \"Line\" lines ax, xs, ys1, linewidth 3 vlines ax, 0 , color black axl Axis figl 1, 2 , title \"Log Transform\" lines axl, xs, ys2, linewidth 3 vlines axl, 0 , color black xlims 10, 10 ylims 5, 5 figl end md\" Define Model\" model function pollen model X, y prior intercept ~ Normal 0, 1 pollen x ~ Normal 0, 1 meds x ~ Normal 0, 1 likelihood for i in eachindex y line intercept pollen x X i, 1 meds x X i, 2 log transform exp line y i ~ Poisson log transform end end md\" Infer Posterior Probability\" pollen m pollen model features, labels sampler NUTS samples 1 000 chain p sample pollen m, sampler, samples begin figp Figure titles \"intercept\", \"pollen x\", \"meds x\" for ind, title in enumerate titles ax Axis figp ind, 1 , title \" title\", xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, chain p title , 1 , color lightblue, 0.8 , ax2 Axis figp ind, 2 , title \" title\", xlabel \"Iteration\", ylabel \"Sample Values\" density ax2, chain p title , 1 , color lightblue, 0.8 end figp end md\" Make Predictions\" newX 0 0 noPollen noMeds 0 1 noPollen Meds 1 0 Pollen noMeds 1 1 Pollen Meds missing counts fill missing, 4 predict model pollen model newX, missing counts predictions predict predict model, chain p begin figpp Figure size 800, 800 for ind in 1 4 ax Axis figpp ind, 1 , title \"y ind \", xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, predictions \"y ind \" , 1 , color lightblue, 0.8 ax2 Axis figpp ind, 2 , title \"y ind \", xlabel \"Iteration\", ylabel \"Sample Values\" hist ax2, predictions \"y ind \" , 1 , color lightblue, 0.8 end figpp end begin figx Figure for ind in 1 4 ax Axis figx ind, 1 hist ax, data p ind ax.title titles p ind ax2 Axis figx ind, 2 hist ax2, predictions \"y ind \" , 1 ax2.title titles p ind end figx end "},{"url":"prob/prob_5_timeseries/","title":"Time Series","tags":["prob","track_prob","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 3 section 5 order 5 title \"Time Series\" tags \"prob\", \"track prob\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils using PlutoUI using Turing, CairoMakie begin using Random Random.seed 2 end md\" Bayesian Time Series\" begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end TableOfContents md\" Data\" md\" Generate Data\" true ϕ 1 0.2 true ϕ 2 0.5 true σ 0.1 time 50 X Vector Float64 undef, time 2 X 1 rand Normal 0, true σ X 2 rand Normal 0, true σ for t in 3 time 2 noise rand Normal 0, true σ X t true ϕ 1 X t 1 true ϕ 2 X t 2 noise end X data X 3 end md\" Visualize Data\" begin fig Figure ax Axis fig 1, 1 , title \"Bayesian Autoregressive AR 2 Model\", xlabel \"t\", ylabel \"X t\" lines ax, X data xlims 0, 60 ylims 0.6, 0.6 fig end md\" Model\" md\" Define Model\" model function ts model time, X prior ϕ 1 ~ Normal 0, 1 ϕ 2 ~ Normal 0, 1 σ ~ Exponential 1 likelihood X 1 ~ Normal 0, σ X 2 ~ Normal 0, σ for t in 3 time 2 μ ϕ 1 X t 1 ϕ 2 X t 2 X t ~ Normal μ, σ end end md\" Infer Posterior Probability\" ts m ts model time, X sampler NUTS samples 1 000 chain p sample ts m, sampler, samples md\" Visualize Results\" begin figp Figure titles \"ϕ 1\", \"ϕ 2\", \"σ\" for ind, title in enumerate titles ax Axis figp ind, 1 , title \" title\", xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, chain p title , 1 , color lightblue, 0.8 ax2 Axis figp ind, 2 , title \" title\", xlabel \"Iteration\", ylabel \"Sample Values\" density ax2, chain p title , 1 , color lightblue, 0.8 end figp end md\" Make Predictions\" time fcst 10 X fcst Matrix Float64 undef, time fcst 2, samples X fcst 1, . X data time 1 X fcst 2, . X data time for col in 1 samples ϕ 1 fcst rand chain p , 1, 1 ϕ 2 fcst rand chain p , 2, 1 error fcst rand chain p , 3, 1 noise fcst rand Normal 0, error fcst for row in 3 time fcst 2 X fcst row, col ϕ 1 fcst X fcst row 1, col ϕ 2 fcst X fcst row 2, col noise fcst end end md\" Visualize Predictions\" ts fcst time time time fcst X fcst mean mean X fcst i, 1 samples for i in 2 time fcst 2 begin for i in 1 samples lines ax, ts fcst, X fcst 2 end, i , linewidth 1, color yellow, 0.2 end lines ax, ts fcst, X fcst mean, linewidth 2, color red, linestyle dot fig end "},{"url":"prob/prob_6_ode/","title":"Probabilistic ODE","tags":["prob","track_prob","Pluto","PlutoUI"],"text":" A Pluto.jl notebook v0.19.46 frontmatter chapter 3 section 6 order 6 title \"Probabilistic ODE\" tags \"prob\", \"track prob\", \"Pluto\", \"PlutoUI\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg if isdir \".. .. pluto deployment environment\" Pkg.activate \".. .. pluto deployment environment\" Pkg.instantiate else println pwd end end using DifferentialEquations using Turing, CairoMakie using TidierFiles using PlutoUI using PlutoUI Button, Slider md\" Bayesian ODE\" TableOfContents md\" Describe Problem\" md\" Lotka Volterra Equations\" md\" \\begin align \\frac dx dt & α x β xy \\\\ \\frac dy dt & δ xy γ y \\end align \" md\"where x the number of prey y is the number of some predator \\frac dx dt and \\frac dy dt the instantaneous growth rates of the two populations t time\" md\" α, β, δ, γ positive real parameters describing the interaction of the two species, α the prey population growth rate and β is the prey population decline rate. δ is the predator population growth rate and γ is the predator population decline rate.\" md\" DifferentialEquations.jl\" md\" f du, u, p, t \\begin cases du 1 p 1 u 1 p 2 u 1 u 2 \\\\ du 2 p 3 u 1 u 2 p 4 u 2 \\end cases \" md\"Define Julia Function\" function lotka volterra du, u, p, t x, y u α, β, δ, γ p du 1 dx α x β x y du 2 dy δ x y γ y end md\" Assign Variables\" md\" u Populations x Populations of Rabbits y Population of Foxes p Parameters α Rabbit Population Growth Rate β Rabbit Decline Rate δ Fox Population Growth Rate γ Fox Population Decline Rate t Time \" t begin 0 md\" Visualize Model\" md\" Interactive Model\" bind reset Button \"Reset\" begin reset md\"Time t bind t end Slider 0.0 0.1 10.0, 10.0, true \" end tspan t begin, t end begin reset md\"\"\" Initial Rabbit Population bind x begin Scrubbable 1 5, default 1 | Initial Fox Population bind y begin Scrubbable 1 5, default 1 \"\"\" end u begin x begin, y begin begin reset md\"\"\" Rabbit Growth α bind α Scrubbable 0.5 0.01 3.0, default 2.0, format \".2f\" || Rabbit Decline β bind β Scrubbable 0.5 0.01 3.0, default 1.2, format \".2f\" Fox Growth δ bind δ Scrubbable 0.5 0.01 3.0, default 0.9, format \".2f\" || Fox Decline γ bind γ Scrubbable 0.5 0.01 3.0, default 2.9, format \".2f\" \"\"\" end p α, β, δ, γ prob ODEProblem lotka volterra, u begin, tspan, p sol solve prob, Tsit5 rabbit sol t end 1 fox sol t end 2 md\" Plotting Model\" md\"\"\" Populations at Time t t end | Rabbits round Int, rabbit | Foxes round Int, fox \"\"\" begin fig Figure ax Axis fig 1, 1 , title \"Lotka Volterra Equations\", xlabel \"Time in Years\", ylabel \"Population\" labels \"Rabbits\", \"Foxes\" for col, label in enumerate labels lines ax, sol.t, sol col, , linewidth 2, label label end axislegend fig end md\"\"\" Populations at Year t end | Rabbits round Int, rabbit | Foxes round Int, fox \"\"\" begin fig2 Figure ax2 Axis fig2 1, 1 , title \"Lotka Volterra Equations Phase Space \", xlabel \"Rabbits Population\", ylabel \"Foxes Population\" lines ax2, sol 1, , sol 2, , linewidth 2 scatter ax2, rabbit, fox, color red, markersize 15 fig2 end md\" Bayesian Model\" baboons read csv \".. data baboons cheetahs.csv\", col names false data baboons | Matrix ts 0 0.1 10 begin fig3 Figure ax3 Axis fig3 1, 1 , title \"Bayesian Differential Equations\", xlabel \"t\", ylabel \"Population\" for ind in 1 2 lines ax3, ts, data ind, , linewidth 2, linestyle dot, label labels ind end axislegend xlims 0.0, 10.0 ylims 0.0, 10.0 ax3.xticks collect 0 10 ax3.yticks collect 0 10 fig3 end md\" Assign Variables\" md\" mx begin initial population of rabbits my begin initial population of foxes mu begin initial population \" mx begin data 1, 1 my begin data 2, 1 mu begin mx begin, my begin md\" Define Model\" model function lv model data, prob prior alpha ~ truncated Normal 1.5, 1 lower 0, upper 5 beta ~ truncated Normal 1.5, 1 lower 0, upper 5 delta ~ truncated Normal 1.5, 1 lower 0, upper 5 gamma ~ truncated Normal 1.5, 1 lower 0, upper 5 σ ~ Uniform 0, 1 likelihood p alpha, beta, delta, gamma sol solve prob, Tsit5 p p, saveat 0.1 for i in eachindex sol data , i ~ MvNormal sol i , σ end end md\" Infer Posterior Probability\" model lv lv model data, prob sampler NUTS samples 1 000 chain lv sample model lv, sampler, samples begin fig4 Figure size 800, 800 params \"alpha\", \"beta\", \"delta\", \"gamma\", \"σ\" for ind, param in enumerate params ax Axis fig4 ind, 1 , title \" param\", xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 samples, chain lv param , 1 , color lightblue, 0.8 ax2 Axis fig4 ind, 2 , title \" param\", xlabel \"Iteration\", ylabel \"Sample Values\" density ax2, chain lv param , 1 , color lightblue, 0.8 end fig4 end md\" Retrodiction\" md\"sample from posterior distributions\" posterior samples sample chain lv alpha, beta, delta, gamma , 300 replace false md\"visualize posterior samples\" begin fig5 Figure size 800, 800 params2 \"alpha\", \"beta\", \"delta\", \"gamma\" for ind, param in enumerate params2 ax Axis fig5 ind, 1 , title \" param\", xlabel \"Iteration\", ylabel \"Sample Values\" lines ax, 1 300, posterior samples param , 1 , color lightblue, 0.8 ax2 Axis fig5 ind, 2 , title \" param\", xlabel \"Iteration\", ylabel \"Sample Values\" density ax2, posterior samples param , 1 , color lightblue, 0.8 end fig5 end begin fig6 Figure ax6 Axis fig6 1, 1 , title \"Lotka Volterra Equations Phase Space \", xlabel \"Rabbits Population\", ylabel \"Foxes Population\" for ind in eachrow Array posterior samples sol samples solve prob, Tsit5 p ind, saveat 0.1 lines ax6, sol samples label \"\", linewidth 0.1, colormap Spectral, 0.5 end fig6 end "}]